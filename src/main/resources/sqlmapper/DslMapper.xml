<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dadiyw.dsl.dao.DslMapper">
  <resultMap id="BaseResultMap" type="com.dadiyw.dsl.model.Dsl">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="dsl" jdbcType="VARCHAR" property="dsl" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="is_dir" jdbcType="TINYINT" property="isDir" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, node_name, dsl, pid, sort, is_dir, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_dsl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_dsl
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dadiyw.dsl.model.Dsl">
    insert into t_dsl (id, node_name, dsl, 
      pid, sort, is_dir, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{nodeName,jdbcType=VARCHAR}, #{dsl,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{isDir,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dadiyw.dsl.model.Dsl">
    insert into t_dsl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="dsl != null">
        dsl,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="isDir != null">
        is_dir,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="dsl != null">
        #{dsl,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isDir != null">
        #{isDir,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dadiyw.dsl.model.Dsl">
    update t_dsl
    <set>
      <if test="nodeName != null">
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="dsl != null">
        dsl = #{dsl,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="isDir != null">
        is_dir = #{isDir,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dadiyw.dsl.model.Dsl">
    update t_dsl
    set node_name = #{nodeName,jdbcType=VARCHAR},
      dsl = #{dsl,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      is_dir = #{isDir,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>